/*
 * Predict with a CPSign classification model
 * Service that deploys a CPSign classification model and allows for predictions to be made by the deployed model.
 *
 * OpenAPI spec version: 0.1.0
 * Contact: info@genettasoft.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;

import javax.validation.constraints.DecimalMax;
import javax.validation.constraints.DecimalMin;
import javax.validation.constraints.NotNull;

import org.json.simple.JSONObject;

import com.fasterxml.jackson.annotation.JsonProperty;

import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;

/**
 * Mapping of label to predicted p-value
 */
@ApiModel(description = "Mapping of label to predicted p-value")
public class PValueMapping {
	@JsonProperty("label")
	@ApiModelProperty(required = true, value = "Label", example="mutagen")
	private final String label;

	@JsonProperty("pValue")
	@ApiModelProperty(required = true, value = "p-value", example="0.75")
	@NotNull
	@DecimalMin("0") @DecimalMax("1")
	private final Double pValue;

	public PValueMapping(String label, Double pvalue) {
		this.label = label;
		this.pValue = round(pvalue);
	}
	
	@Override
	public boolean equals(java.lang.Object o) {
		if (this == o) {
			return true;
		}
		if (o == null || getClass() != o.getClass()) {
			return false;
		}
		PValueMapping pvalueMapping = (PValueMapping) o;
		return Objects.equals(this.label, pvalueMapping.label) &&
				Objects.equals(this.pValue, pvalueMapping.pValue);
	}

	@Override
	public int hashCode() {
		return Objects.hash(label, pValue);
	}

	@SuppressWarnings("unchecked")
	@Override
	public String toString() {
		
		JSONObject jsonResponse = new JSONObject();

		jsonResponse.put("label", label);
		jsonResponse.put("pValue", pValue);

		return jsonResponse.toJSONString();
	}
	
	private static double round(double val){
		return Math.round(val*1000.0)/1000.0;
	}
}