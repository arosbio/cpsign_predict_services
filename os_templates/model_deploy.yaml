apiVersion: v1
kind: Template
metadata:
    name: ${MODEL_TYPE}-deploy-template
    annotations:
        description: "Deploy a ${MODEL_TYPE} prediction service"
        tags: "cpsign, ${MODEL_TYPE}, cpsign-prediction-service"

objects:

  - apiVersion: v1
    kind: ImageStream
    metadata:
        name: cpsign-${MODEL_TYPE}-${MODEL_ID}
        labels:
            app: cpsign-${MODEL_TYPE}-${MODEL_ID}

  - apiVersion: v1
    kind: BuildConfig
    metadata:
        name: cpsign-${MODEL_TYPE}-${MODEL_ID}
        labels:
            app: cpsign-${MODEL_TYPE}-${MODEL_ID}
    spec:
        source:
            type: Dockerfile
            dockerfile: |
                FROM cpsign-${MODEL_TYPE}:latest
                RUN mkdir /opt/app-root/modeldata
                RUN curl -v -o /opt/app-root/modeldata/model.jar -X GET "${JAR_URL}" -H "accept: application/json" -H "Authorization: bearer ${TOKEN}"
                RUN curl -v -o /opt/app-root/modeldata/license.license -X GET "${LICENSE_URL}" -H "accept: application/json" -H "Authorization: bearer ${TOKEN}"
            
        strategy:
            dockerStrategy:
                noCache: true
                from:
                    kind: ImageStreamTag
                    name: cpsign-${MODEL_TYPE}:latest
        output:
            to:
                kind: ImageStreamTag
                name: cpsign-${MODEL_TYPE}-${MODEL_ID}:latest
        triggers:
          - type: ConfigChange

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
        name: cpsign-${MODEL_TYPE}-${MODEL_ID}
        labels:
            app: cpsign-${MODEL_TYPE}-${MODEL_ID}
    spec:
        strategy:
            type: Rolling
            rollingParams:
            updatePeriodSeconds: 1
            intervalSeconds: 1
            timeoutSeconds: 600
            maxUnavailable: 25%
            maxSurge: 25%
            resources: {}
            activeDeadlineSeconds: 21600
        triggers:
         - type: ImageChange
           imageChangeParams:
               automatic: true
               containerNames:
                   - cpsign-${MODEL_TYPE}-${MODEL_ID}
               from:
                   kind: ImageStreamTag
                   name: cpsign-${MODEL_TYPE}-${MODEL_ID}:latest
         - type: ConfigChange
        replicas: 1
        selector:
            deploymentconfig: cpsign-${MODEL_TYPE}-${MODEL_ID}
        template:
            metadata:
                labels:
                    app: cpsign-${MODEL_TYPE}-${MODEL_ID}
                    deploymentconfig: cpsign-${MODEL_TYPE}-${MODEL_ID}
            spec:
                containers:
                  - name: cpsign-${MODEL_TYPE}-${MODEL_ID}
                    image: cpsign-${MODEL_TYPE}:latest
                    ports: 
                      - containerPort: 8080
                        protocol: TCP
                    livenessProbe:
                        httpGet:
                            path: v1/swagger.json
                            port: 8080
                            scheme: HTTP
                        timeoutSeconds: 1
                        periodSeconds: 10
                        initialDelaySeconds: 30
                        successThreshold: 1
                        failureThreshold: 3
                    terminationMessagePath: /dev/termination-log
                    imagePullPolicy: Always
            restartPolicy: Always
            terminationGracePeriodSeconds: 30
            dnsPolicy: ClusterFirst
    
  - apiVersion: v1
    kind: Service
    metadata:
        name: cpsign-${MODEL_TYPE}-${MODEL_ID}
        labels:
            app: cpsign-${MODEL_TYPE}-${MODEL_ID}
    spec:
        ports:
          - name: 8080-tcp
            protocol: TCP
            port: 8080
            targetPort: 8080
        selector:
            deploymentconfig: cpsign-${MODEL_TYPE}-${MODEL_ID}
    status:
        loadBalancer: {}

  - apiVersion: v1
    kind: Route
    metadata:
        name: cpsign-${MODEL_TYPE}-${MODEL_ID}
        labels:
            app: cpsign-${MODEL_TYPE}-${MODEL_ID}

    spec:
        host: m${MODEL_ID}.130.238.55.60.nip.io
        path: /
        to:
            kind: Service
            name: cpsign-${MODEL_TYPE}-${MODEL_ID}
            weight: 100
        port:
            targetPort: 8080-tcp

parameters:
    - name: JAR_URL
      description: URL from where the model jar file can be downloaded
    - name: LICENSE_URL
      description: URL from where the license file can be downloaded
    - name: TOKEN
      description: Keycloak token used for accessing license and model files
    - name: MODEL_ID
      description: Unique id for the model.
    - name: MODEL_TYPE
      description: Type of model, e.g., classification, regression, etc.